{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAG9BC,GAFoBF,SAASC,cAAc,UAEhC,IACjB,IAAIE,EAAa,EACbC,EAAQ,EACRC,EAAS,EACTC,EAAO,EAGXP,EAAKQ,iBAAiB,SAiCtB,SAAsBC,GACpBN,EAASM,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MAEvCR,EAAcS,OAAOV,EAASW,OAC9BP,EAAOM,OAAOV,EAASY,MACvBT,EAASO,OAAOV,EAASa,WArC3BhB,EAAKQ,iBAAiB,UAwCtB,SAAkBC,GAChBA,EAAIQ,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAQY,IAE1BC,YAAW,KAvCf,IAAuBC,EAAUC,GAAVD,EAwCHF,EAAI,EAxCSG,EAwCNjB,EAAac,EAAIX,EAvCnC,IAAIe,SAAS,CAACC,EAASC,KAE5B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EAEFF,EAAQ,C,SAACH,EAAUN,MAAAO,IAGnBG,EAAO,C,SAACJ,EAAUN,MAAAO,QAgCnBO,MAAK,EAACR,SAAEA,EAAUN,MAAAe,MACnBC,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBZ,QAAiBS,UAE/DI,OAAM,EAACb,SAAEA,EAAUN,MAAAoB,MAClBJ,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAoBf,QAAec,YAExD7B,GAEHA,GAAiBE,EAGnBP,EAAKoC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\nconst  createPromiseBtn = document.querySelector('button');\n\nconst formData = {};\nlet firstDelay = 0;\nlet delay = 0;\nlet amount = 0;\nlet step = 0;\n\n\nform.addEventListener('input', onInputValue);\nform.addEventListener('submit', onSubmit);\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    \n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay})\n    } else {\n      // Reject\n      reject({position, delay})\n    } \n  });\n  \n};\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\nfunction onInputValue(evt) {\n  formData[evt.target.name] = evt.target.value\n\n  firstDelay =  Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n};\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n   \n    setTimeout(()=>{\n      createPromise(i + 1, firstDelay + i * step)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }, delay);\n    \n    delay  = delay + step;\n  }\n\n  form.reset();\n\n};\n// const qqq = Number(form[0].value)\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$step","addEventListener","evt","target","name","value","Number","delay","step","amount","preventDefault","i","setTimeout","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","reset"],"version":3,"file":"03-promises.84c89c94.js.map"}