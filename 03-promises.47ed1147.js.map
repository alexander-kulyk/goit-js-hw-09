{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAG9BC,GAFoBF,SAASC,cAAc,UAEhC,IACbE,EAAa,EACbC,EAAQ,EACRC,EAAS,EACTC,EAAO,EAGXP,EAAKQ,iBAAiB,SAiCtB,SAAsBC,GACpBN,EAASM,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MAEvCR,EAAcS,OAAOV,EAASW,OAC9BP,EAAOM,OAAOV,EAASY,MACvBT,EAASO,OAAOV,EAASa,WArC3BhB,EAAKQ,iBAAiB,UAwCtB,SAAkBC,G,kBAKdQ,YAAW,WAvCf,IAAuBC,EAAUC,GAAVD,EAwCHE,EAAI,EAxCSD,EAwCNf,EAAagB,EAAIb,EAvCnC,IAAIc,SAAS,SAACC,EAASC,GAENC,KAAKC,SAAW,GAGpCH,EAAQ,CAACJ,WAAUJ,MAAAK,IAGnBI,EAAO,CAACL,WAAUJ,MAAAK,QAgCnBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALb,MACnBe,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANJ,EAAM,UAEvEK,OAAM,SAAAN,G,IAAGT,EAAQS,EAART,SAAUgB,EAAKP,EAALb,MAClBe,EAAA/B,GAASgC,OAAOK,QAAQ,sBAAqCH,OAAfd,EAAS,QAAYc,OAANE,EAAM,YAEhE7B,GAEHA,GAAiBE,GAdnBE,EAAI2B,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAQ+B,IAAGC,EAAAD,GAe/BrC,EAAKuC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\nconst  createPromiseBtn = document.querySelector('button');\n\nconst formData = {};\nlet firstDelay = 0;\nlet delay = 0;\nlet amount = 0;\nlet step = 0;\n\n\nform.addEventListener('input', onInputValue);\nform.addEventListener('submit', onSubmit);\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    \n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay})\n    } else {\n      // Reject\n      reject({position, delay})\n    } \n  });\n  \n};\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\nfunction onInputValue(evt) {\n  formData[evt.target.name] = evt.target.value\n\n  firstDelay =  Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n};\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n   \n    setTimeout(()=>{\n      createPromise(i + 1, firstDelay + i * step)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }, delay);\n    \n    delay  = delay + step;\n  }\n\n  form.reset();\n\n};\n// const qqq = Number(form[0].value)\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","addEventListener","evt","target","name","value","Number","delay","step","amount","setTimeout","position","delay1","i","Promise","resolve","reject","Math","random","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","preventDefault","i1","_loop","reset"],"version":3,"file":"03-promises.47ed1147.js.map"}