{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAG9BC,GAFoBF,SAASC,cAAc,UAEhC,IACbE,EAAa,EACbC,EAAQ,EACRC,EAAS,EACTC,EAAO,EAGXP,EAAKQ,iBAAiB,SAiCtB,SAAsBC,GAOpB,GANAN,EAASM,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MAEvCR,EAAcS,OAAOV,EAASW,OAC9BP,EAAOM,OAAOV,EAASY,MACvBT,EAASO,OAAOV,EAASa,QAErBZ,EAAa,GAAKG,EAAO,GAAKD,EAAS,EAEzC,YADAW,EAAAnB,GAASoB,OAAOC,QAAQ,2CAxC5BnB,EAAKQ,iBAAiB,UA8CtB,SAAkBC,G,kBAKdW,YAAW,WA7Cf,IAAuBC,EAAUC,GAAVD,EA8CHE,EAAI,EA9CSD,EA8CNlB,EAAamB,EAAIhB,EA7CnC,IAAIiB,SAAS,SAACC,EAASC,GAENC,KAAKC,SAAW,GAGpCH,EAAQ,CAACJ,WAAUP,MAAAQ,IAGnBI,EAAO,CAACL,WAAUP,MAAAQ,QAsCnBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALhB,MACnBG,EAAAnB,GAASoB,OAAOc,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANF,EAAM,UAEvEG,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUc,EAAKL,EAALhB,MAClBG,EAAAnB,GAASoB,OAAOC,QAAQ,sBAAqCc,OAAfZ,EAAS,QAAYY,OAANE,EAAM,YAEhE9B,GAEHA,GAAiBE,GAdnBE,EAAI2B,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAQ+B,IAAGC,EAAAD,GAe/BrC,EAAKuC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\nconst  createPromiseBtn = document.querySelector('button');\n\nconst formData = {};\nlet firstDelay = 0;\nlet delay = 0;\nlet amount = 0;\nlet step = 0;\n\n\nform.addEventListener('input', onInputValue);\nform.addEventListener('submit', onSubmit);\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    \n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay})\n    } else {\n      // Reject\n      reject({position, delay})\n    } \n  });\n  \n};\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\nfunction onInputValue(evt) {\n  formData[evt.target.name] = evt.target.value\n\n  firstDelay =  Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n\n  if (firstDelay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('the number must be greater than zero')\n    return;\n    \n  }\n};\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n   \n    setTimeout(()=>{\n      createPromise(i + 1, firstDelay + i * step)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }, delay);\n    \n    delay  = delay + step;\n  }\n\n  form.reset();\n\n};\n// const qqq = Number(form[0].value)\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","addEventListener","evt","target","name","value","Number","delay","step","amount","$parcel$interopDefault","Notify","failure","setTimeout","position","delay1","i","Promise","resolve","reject","Math","random","then","param","delay2","success","concat","catch","delay3","preventDefault","i1","_loop","reset"],"version":3,"file":"03-promises.d37cf23f.js.map"}